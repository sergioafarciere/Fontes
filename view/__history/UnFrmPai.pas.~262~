unit UnFrmPai;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, ExtCtrls, StdCtrls, Buttons, UnModelAgente, UnConexaoSql, DB, UnModelEscola,
  Mask, UnControllerEscola;

type
  TOperacao = (opIncluir, opAlterar, opNavegar, opExcluir, opGravar, opCancelar, opSair);
  TfrmPai = class(TForm)
    pnlTopPai: TPanel;
    btnNovo: TBitBtn;
    btnAlterar: TBitBtn;
    btnExcluir: TBitBtn;
    btnCancelar: TBitBtn;
    pnlBottonPai: TPanel;
    lblCodigo: TLabel;
    edtCodigo: TEdit;
    lblNome: TLabel;
    edtNome: TEdit;
    btnSair: TBitBtn;
    btnGravar: TBitBtn;
    lblTipoPessoa: TLabel;
    cbxTipoPessoa: TComboBox;
    lblCPFCNPJ: TLabel;
    mskCPFCNPJ: TMaskEdit;
    lblCep: TLabel;
    mskCEP: TMaskEdit;
    lblUF: TLabel;
    cbxUF: TComboBox;
    lblEndereco: TLabel;
    edtEndereco: TEdit;
    lblNumero: TLabel;
    edtNumero: TEdit;
    lblBairro: TLabel;
    edtBairro: TEdit;
    lblCidade: TLabel;
    lblComplemento: TLabel;
    lblEmail: TLabel;
    edtCidade: TEdit;
    edtComplemento: TEdit;
    edtEmail: TEdit;
    lblContato: TLabel;
    lblTelefone: TLabel;
    edtContato: TEdit;
    lblObservacao: TLabel;
    mmoObservacoes: TMemo;
    mskTelefone: TMaskEdit;
    procedure mascaraCPFCNPJ(Sender: TObject);
    procedure NavegarEnter(Sender: TObject; var Key: Char);
    procedure FormCreate(Sender: TObject);
    procedure FormDestroy(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure CampoObrigatorio(Sender: TObject);

  public
    FOperacao: TOperacao;
    function validarCampos : Boolean;
    procedure limparCampos;
    procedure habilitarComandos(aOperacao : TOperacao);
//    procedure CampoObrigatorio(Sender: TObject);
  end;

var
  frmPai: TfrmPai;

implementation

{$R *.dfm}

{ TfrmPai }

{$region'CREATE_DESTROY'}
procedure TfrmPai.FormCreate(Sender: TObject);
begin
  dmConexao := TdmConexao.Create(nil);
end;
procedure TfrmPai.FormDestroy(Sender: TObject);
begin
  FreeAndNil(dmConexao);
end;

procedure TfrmPai.FormShow(Sender: TObject);
begin
  habilitarComandos(opNavegar);
end;
{$endregion}

{$region'CONTROLE DE TELA'}
procedure TfrmPai.habilitarComandos(aOperacao: TOperacao);
begin
  case aOperacao of
  opAlterar, opIncluir:
  begin
    edtCodigo.Enabled := False;
    cbxTipoPessoa.Enabled := True;
    edtNome.Enabled := True;
    mskCPFCNPJ.Enabled := True;
    mskCEP.Enabled := True;
    cbxUF.Enabled := True;
    edtEndereco.Enabled := True;
    edtNumero.Enabled := True;
    edtBairro.Enabled := True;
    edtCidade.Enabled := True;
    edtComplemento.Enabled := True;
    edtEmail.Enabled := True;
    edtContato.Enabled := True;
    mskTelefone.Enabled := True;
    mmoObservacoes.Enabled := True;
    btnNovo.Enabled := False;;
    btnExcluir.Enabled := False;
    btnAlterar.Enabled := False;
    btnCancelar.Enabled := True;
    btnGravar.Enabled := True;
    btnSair.Enabled := False;
  end;
  opNavegar:
  begin
    edtCodigo.Enabled := True;
    cbxTipoPessoa.Enabled := False;
    edtNome.Enabled := False;
    mskCPFCNPJ.Enabled := False;
    mskCEP.Enabled := False;
    cbxUF.Enabled := False;
    edtEndereco.Enabled := False;
    edtNumero.Enabled := False;
    edtBairro.Enabled := False;
    edtCidade.Enabled := False;
    edtComplemento.Enabled := False;
    edtEmail.Enabled := False;
    edtContato.Enabled := False;
    mskTelefone.Enabled := False;
    mmoObservacoes.Enabled := False;
    btnNovo.Enabled := True;
    btnExcluir.Enabled := True;
    btnAlterar.Enabled := True;
    btnCancelar.Enabled := False;
    btnGravar.Enabled := False;
    btnSair.Enabled := True;
  end;
  end;
end;

procedure TfrmPai.NavegarEnter(Sender: TObject; var Key: Char);
begin
  if Key = #13 then
    Perform(WM_NEXTDLGCTL,0,0);
end;

procedure TfrmPai.limparCampos;
var
  loop: Integer;
begin
  for loop := 0 to ComponentCount - 1 do
  begin
    if (Components[loop] is (TCustomEdit)) and (Tag = 1)  then
      TEdit(Components[loop] as TCustomEdit).Clear;
    if (Components[loop] is (TComboBox)) and (Tag = 1) then
    begin
      (Components[loop] as TComboBox).ItemIndex := -1;
      (Components[loop] as TComboBox).Text := EmptyStr;
    end;
    if (Components[loop] is (TCheckBox)) and (Tag = 1) then
      (Components[loop] as TCheckBox).Checked := False;
  end;
end;

function TfrmPai.validarCampos:Boolean;
var
  loop : Integer;
  MSG : string;
begin
  Result := False;
  MSG := EmptyStr;
  for loop := 0 to ComponentCount - 1 do
    begin
      if Components[loop].ClassType = TEdit then
        if (TEdit(Components[loop]).Text = EmptyStr) and (TEdit(Components[loop]).Tag = 1) then
        begin
          Result := True;
          MessageDlg('Campo Obrigatório',mtInformation,[mbOK],0);
          Msg := Msg + #13 + '-  ' + TEdit(Components[loop]).Name;
          Break;
        end; 
      if Components[loop].ClassType = TComboBox then
        if (TComboBox(Components[loop]).Text = EmptyStr) and (TComboBox(Components[loop]).Tag = 1) then
        begin
          Result := True;
          MessageDlg('Campo Obrigatório',mtInformation,[mbOK],0);
          Msg := Msg + #13 + '-  ' + TEdit(Components[loop]).Name;
          Break;
        end;
      if Components[loop].ClassType = TMemo then
        if (TMemo(Components[loop]).Text = EmptyStr) and (TMemo(Components[loop]).Tag = 1) then
        begin
          Result := True;
          MessageDlg('Campo Obrigatório',mtInformation,[mbOK],0);
  //        TMemo(Components[loop]).SetFocus;
          Msg := Msg + #13 + '-  ' + TEdit(Components[loop]).Name;
          Break;
        end;
      if Components[loop].ClassType = TMaskEdit then
        if (TMaskEdit(Components[loop]).Text = EmptyStr) and (TMaskEdit(Components[loop]).Tag = 1) then
        begin
          Result := True;
          MessageDlg('Campo Obrigatório',mtInformation,[mbOK],0);
  //        TMaskEdit(Components[loop]).SetFocus;
          Msg := Msg + #13 + '-  ' + TEdit(Components[loop]).Name;
          Break;
        end;
    end;
    if Result = True then 
    MessageDlg('Campo(s) obrigatório(s):' + #13 + #13 + Trim(Msg), mtError, [mbOk], 0);
end;

procedure TfrmPai.mascaraCPFCNPJ(Sender: TObject);
begin
    if cbxTipoPessoa.ItemIndex = 0 then
    begin
      lblCPFCNPJ.Caption := 'CPF';
      mskCPFCNPJ.EditMask := '999.999.999-99;0;_';
      mskCPFCNPJ.Width := 85;
    end;
    if cbxTipoPessoa.ItemIndex = 1 then
    begin
      lblCPFCNPJ.Caption := 'CNPJ';
      mskCPFCNPJ.EditMask := '99.999.999/9999-99;0;_';
      mskCPFCNPJ.Width := 108
    end;
  end;

//procedure TfrmPai.CampoObrigatorio(Sender: TObject);
//begin
//  if (Trim(TEdit(Sender).Text) = EmptyStr) or (Trim(TMaskEdit(Sender).Text) = EmptyStr) then
//  begin
//    MessageDlg('Campo obrigatório!',mtInformation,[mbOK],0);
//    TEdit(Sender).SetFocus;
//  end
//  else
//    Perform(WM_NEXTDLGCTL,1,1);
//end;

{$endregion}

end.
