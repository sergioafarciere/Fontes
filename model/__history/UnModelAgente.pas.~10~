unit UnModelAgente;

interface

uses SysUtils;

type TAgente = class
  private
    FID: Integer;
    FNome: string;
    function getID: Integer;
    procedure setID(const Value: Integer);
    function getNome: string;
    procedure setNome(const Value: string);
  public
    property ID : Integer read getID write setID;
    property Nome : string read getNome write setNome;
end;

implementation

{ TAgente }

{ TAgente }

function TAgente.getID: Integer;
begin
 Result := FID;
end;

function TAgente.getNome: string;
begin
 Result := FNome;
end;

procedure TAgente.setID(const Value: Integer);
begin
if Value = EmptyStr then
 raise Exception.Create('Valor não pode ser vázio')
else
 FID := Value;
end;

procedure TAgente.setNome(const Value: string);
begin
if Value = EmptyStr then
  raise Exception.Create('Valor não pode ser vázio')
else
  FNome := Value;
end;

end.
